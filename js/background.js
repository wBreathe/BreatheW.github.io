!function i(t,o,a){function u(r,e){if(!o[r]){if(!t[r]){var n="function"==typeof require&&require;if(!e&&n)return n(r,!0);if(f)return f(r,!0);throw new Error("Cannot find module '"+r+"'")}e=o[r]={exports:{}};t[r][0].call(e.exports,function(e){var n=t[r][1][e];return u(n||e)},e,e.exports,i,t,o,a)}return o[r].exports}for(var f="function"==typeof require&&require,e=0;e<a.length;e++)u(a[e]);return u}({1:[function(s,d,T){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function E(e,n){for(var r=0;r<n.length;r++){var i=n[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,function(e){e=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===n?String:Number)(e);r=r.call(e,n||"default");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}(e,"string");return"symbol"===t(e)?e:String(e)}(i.key),i)}}function G(e,n,r){n&&E(e.prototype,n),r&&E(e,r),Object.defineProperty(e,"prototype",{writable:!1})}var p=document.getElementById("background");function o(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}_e();var R=[],D=[],e=(R.push(new o),function(e){var n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},r=e.getContext("webgl2",n),i=!!r;i||(r=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));e=i?(r.getExtension("EXT_color_buffer_float"),r.getExtension("OES_texture_float_linear")):(a=r.getExtension("OES_texture_half_float"),r.getExtension("OES_texture_half_float_linear"));r.clearColor(0,0,0,1);var t,o,a,n=i?r.HALF_FLOAT:a.HALF_FLOAT_OES;a=i?(t=c(r,r.RGBA16F,r.RGBA,n),o=c(r,r.RG16F,r.RG,n),c(r,r.R16F,r.RED,n)):(t=c(r,r.RGBA,r.RGBA,n),o=c(r,r.RGBA,r.RGBA,n),c(r,r.RGBA,r.RGBA,n));return{gl:r,ext:{formatRGBA:t,formatRG:o,formatR:a,halfFloatTexType:n,supportLinearFiltering:e}}}(p)),S=e.gl,y=e.ext;function c(e,n,r,i){if(o=n,a=r,u=i,f=(t=e).createTexture(),t.bindTexture(t.TEXTURE_2D,f),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,o,4,4,0,a,u,null),o=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,f,0),t.checkFramebufferStatus(t.FRAMEBUFFER)!=t.FRAMEBUFFER_COMPLETE)switch(n){case e.R16F:return c(e,e.RG16F,e.RG,i);case e.RG16F:return c(e,e.RGBA16F,e.RGBA,i);default:return null}var t,o,a,u,f;return{internalFormat:n,format:r}}/Mobi|Android/i.test(navigator.userAgent)&&(config.DYE_RESOLUTION=512),y.supportLinearFiltering||(config.DYE_RESOLUTION=512,config.SHADING=!1,config.BLOOM=!1,config.SUNRAYS=!1);var e=function(){function r(e,n){x(this,r),this.vertexShader=e,this.fragmentShaderSource=n,this.programs=[],this.activeProgram=null,this.uniforms=[]}return G(r,[{key:"setKeywords",value:function(e){for(var n=0,r=0;r<e.length;r++)n+=function(e){if(0==e.length)return 0;for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r),n|=0;return n}(e[r]);var i,t=this.programs[n];null==t&&(i=a(S.FRAGMENT_SHADER,this.fragmentShaderSource,e),t=Y(this.vertexShader,i),this.programs[n]=t),t!=this.activeProgram&&(this.uniforms=H(t),this.activeProgram=t)}},{key:"bind",value:function(){S.useProgram(this.activeProgram)}}]),r}(),n=function(){function r(e,n){x(this,r),this.uniforms={},this.program=Y(e,n),this.uniforms=H(this.program)}return G(r,[{key:"bind",value:function(){S.useProgram(this.program)}}]),r}();function Y(e,n){var r=S.createProgram();if(S.attachShader(r,e),S.attachShader(r,n),S.linkProgram(r),S.getProgramParameter(r,S.LINK_STATUS))return r;throw S.getProgramInfoLog(r)}function H(e){for(var n=[],r=S.getProgramParameter(e,S.ACTIVE_UNIFORMS),i=0;i<r;i++){var t=S.getActiveUniform(e,i).name;n[t]=S.getUniformLocation(e,t)}return n}function a(e,n,r){i=n,n=null==(r=r)?i:(t="",r.forEach(function(e){t+="#define "+e+"\n"}),t+i);var i,t,r=S.createShader(e);if(S.shaderSource(r,n),S.compileShader(r),S.getShaderParameter(r,S.COMPILE_STATUS))return r;throw S.getShaderInfoLog(r)}var w,A,_,V,b,k,U,W,q,r,i,u,f=a(S.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),K=a(S.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),j=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),J=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),Q=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),Z=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),$=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),ee=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),ne=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),re=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),ie=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),te=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),oe=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),ae=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",y.supportLinearFiltering?null:["MANUAL_FILTERING"]),ue=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),fe=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),ce=a(S.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),ve=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),le=a(S.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),L=(S.bindBuffer(S.ARRAY_BUFFER,S.createBuffer()),S.bufferData(S.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),S.STATIC_DRAW),S.bindBuffer(S.ELEMENT_ARRAY_BUFFER,S.createBuffer()),S.bufferData(S.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),S.STATIC_DRAW),S.vertexAttribPointer(0,2,S.FLOAT,!1,0,0),S.enableVertexAttribArray(0),function(e){S.bindFramebuffer(S.FRAMEBUFFER,e),S.drawElements(S.TRIANGLES,6,S.UNSIGNED_SHORT,0)}),F=[],me=(q="assets/background.png",r=S.createTexture(),S.bindTexture(S.TEXTURE_2D,r),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_MIN_FILTER,S.LINEAR),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_MAG_FILTER,S.LINEAR),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_WRAP_S,S.REPEAT),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_WRAP_T,S.REPEAT),S.texImage2D(S.TEXTURE_2D,0,S.RGB,1,1,0,S.RGB,S.UNSIGNED_BYTE,new Uint8Array([255,255,255])),i={texture:r,width:1,height:1,attach:function(e){return S.activeTexture(S.TEXTURE0+e),S.bindTexture(S.TEXTURE_2D,r),e}},(u=new Image).onload=function(){i.width=u.width,i.height=u.height,S.bindTexture(S.TEXTURE_2D,r),S.texImage2D(S.TEXTURE_2D,0,S.RGB,S.RGB,S.UNSIGNED_BYTE,u)},u.src=q,i),B=new n(K,j),se=new n(f,J),he=new n(f,Q),ge=new n(f,Z),de=new n(f,$),N=new n(f,ee),P=new n(f,ne),O=new n(f,re),Te=new n(f,ie),xe=new n(f,te),v=new n(f,oe),X=new n(f,ae),Ee=new n(f,ue),pe=new n(f,fe),M=new n(f,ce),I=new n(f,ve),z=new n(f,le),C=new e(f,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function Re(){var e=g(config.SIM_RESOLUTION),n=g(config.DYE_RESOLUTION),r=y.halfFloatTexType,i=y.formatRGBA,t=y.formatRG,o=y.formatR,a=y.supportLinearFiltering?S.LINEAR:S.NEAREST,u=(w=null==w?De(n.width,n.height,i.internalFormat,i.format,r,a):Se(w,n.width,n.height,i.internalFormat,i.format,r,a),A=null==A?De(e.width,e.height,t.internalFormat,t.format,r,a):Se(A,e.width,e.height,t.internalFormat,t.format,r,a),_=h(e.width,e.height,o.internalFormat,o.format,r,S.NEAREST),V=h(e.width,e.height,o.internalFormat,o.format,r,S.NEAREST),b=De(e.width,e.height,o.internalFormat,o.format,r,S.NEAREST),g(config.BLOOM_RESOLUTION)),f=y.halfFloatTexType,c=y.formatRGBA,v=y.supportLinearFiltering?S.LINEAR:S.NEAREST;k=h(u.width,u.height,c.internalFormat,c.format,f,v);for(var l=F.length=0;l<config.BLOOM_ITERATIONS;l++){var m=u.width>>l+1,s=u.height>>l+1;if(m<2||s<2)break;m=h(m,s,c.internalFormat,c.format,f,v);F.push(m)}n=g(config.SUNRAYS_RESOLUTION),i=y.halfFloatTexType,t=y.formatR,a=y.supportLinearFiltering?S.LINEAR:S.NEAREST,U=h(n.width,n.height,t.internalFormat,t.format,i,a),W=h(n.width,n.height,t.internalFormat,t.format,i,a)}function h(e,n,r,i,t,o){S.activeTexture(S.TEXTURE0);var a=S.createTexture(),o=(S.bindTexture(S.TEXTURE_2D,a),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_MIN_FILTER,o),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_MAG_FILTER,o),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_WRAP_S,S.CLAMP_TO_EDGE),S.texParameteri(S.TEXTURE_2D,S.TEXTURE_WRAP_T,S.CLAMP_TO_EDGE),S.texImage2D(S.TEXTURE_2D,0,r,e,n,0,i,t,null),S.createFramebuffer());return S.bindFramebuffer(S.FRAMEBUFFER,o),S.framebufferTexture2D(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_2D,a,0),S.viewport(0,0,e,n),S.clear(S.COLOR_BUFFER_BIT),{texture:a,fbo:o,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return S.activeTexture(S.TEXTURE0+e),S.bindTexture(S.TEXTURE_2D,a),e}}}function De(e,n,r,i,t,o){var a=h(e,n,r,i,t,o),u=h(e,n,r,i,t,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function Se(e,n,r,i,t,o,a){var u,f;return e.width==n&&e.height==r||(e.read=(u=e.read,f=h(f=n,r,i,t,o,a),se.bind(),S.uniform1i(se.uniforms.uTexture,u.attach(0)),L(f.fbo),f),e.write=h(n,r,i,t,o,a),e.width=n,e.height=r,e.texelSizeX=1/n,e.texelSizeY=1/r),e}function l(){var e;l.loaded||(l.loaded=!0,document.querySelector(".content-inner").style.background="unset",document.querySelector(".shape").style.fill="#1e1f21",e=[],config.SHADING&&e.push("SHADING"),config.BLOOM&&e.push("BLOOM"),config.SUNRAYS&&e.push("SUNRAYS"),C.setKeywords(e),Re(),be(parseInt(20*Math.random())+5),Ae())}var ye=Date.now(),we=0;window.addEventListener(visibilityChangeEvent,l),window.addEventListener("DOMContentLoaded",l);function Ae(e){n=Date.now(),r=(n-ye)/1e3,r=Math.min(r,.016666),ye=n;var n=r;if(_e()&&Re(),r=n,config.COLORFUL&&1<=(we+=r*config.COLOR_UPDATE_SPEED)&&(we=function(e,n,r){r-=n;return 0==r?n:(e-n)%r+n}(we,0,1),R.forEach(function(e){e.color=Ne()})),0<D.length&&be(D.pop()),R.forEach(function(e){var n,r;e.moved&&(e.moved=!1,n=e.deltaX*config.SPLAT_FORCE,r=e.deltaY*config.SPLAT_FORCE,Ue(e.texcoordX,e.texcoordY,n,r,e.color))}),!config.PAUSED){var r=n;S.disable(S.BLEND),S.viewport(0,0,A.width,A.height),pe.bind(),S.uniform2f(pe.uniforms.texelSize,A.texelSizeX,A.texelSizeY),S.uniform1i(pe.uniforms.uVelocity,A.read.attach(0)),L(V.fbo),M.bind(),S.uniform2f(M.uniforms.texelSize,A.texelSizeX,A.texelSizeY),S.uniform1i(M.uniforms.uVelocity,A.read.attach(0)),S.uniform1i(M.uniforms.uCurl,V.attach(1)),S.uniform1f(M.uniforms.curl,config.CURL),S.uniform1f(M.uniforms.dt,r),L(A.write.fbo),A.swap(),Ee.bind(),S.uniform2f(Ee.uniforms.texelSize,A.texelSizeX,A.texelSizeY),S.uniform1i(Ee.uniforms.uVelocity,A.read.attach(0)),L(_.fbo),he.bind(),S.uniform1i(he.uniforms.uTexture,b.read.attach(0)),S.uniform1f(he.uniforms.value,config.PRESSURE),L(b.write.fbo),b.swap(),I.bind(),S.uniform2f(I.uniforms.texelSize,A.texelSizeX,A.texelSizeY),S.uniform1i(I.uniforms.uDivergence,_.attach(0));for(var i=0;i<config.PRESSURE_ITERATIONS;i++)S.uniform1i(I.uniforms.uPressure,b.read.attach(1)),L(b.write.fbo),b.swap();z.bind(),S.uniform2f(z.uniforms.texelSize,A.texelSizeX,A.texelSizeY),S.uniform1i(z.uniforms.uPressure,b.read.attach(0)),S.uniform1i(z.uniforms.uVelocity,A.read.attach(1)),L(A.write.fbo),A.swap(),X.bind(),S.uniform2f(X.uniforms.texelSize,A.texelSizeX,A.texelSizeY),y.supportLinearFiltering||S.uniform2f(X.uniforms.dyeTexelSize,A.texelSizeX,A.texelSizeY);n=A.read.attach(0);S.uniform1i(X.uniforms.uVelocity,n),S.uniform1i(X.uniforms.uSource,n),S.uniform1f(X.uniforms.dt,r),S.uniform1f(X.uniforms.dissipation,config.VELOCITY_DISSIPATION),L(A.write.fbo),A.swap(),S.viewport(0,0,w.width,w.height),y.supportLinearFiltering||S.uniform2f(X.uniforms.dyeTexelSize,w.texelSizeX,w.texelSizeY),S.uniform1i(X.uniforms.uVelocity,A.read.attach(0)),S.uniform1i(X.uniforms.uSource,w.read.attach(1)),S.uniform1f(X.uniforms.dissipation,config.DENSITY_DISSIPATION),L(w.write.fbo),w.swap()}n=null;if(config.BLOOM){r=w.read;var t=k;if(!(F.length<2)){var o=t,a=(S.disable(S.BLEND),N.bind(),config.BLOOM_THRESHOLD*config.BLOOM_SOFT_KNEE+1e-4),u=config.BLOOM_THRESHOLD-a,f=2*a,a=.25/a;S.uniform3f(N.uniforms.curve,u,f,a),S.uniform1f(N.uniforms.threshold,config.BLOOM_THRESHOLD),S.uniform1i(N.uniforms.uTexture,r.attach(0)),S.viewport(0,0,o.width,o.height),L(o.fbo),P.bind();for(var c=0;c<F.length;c++){var v=F[c];S.uniform2f(P.uniforms.texelSize,o.texelSizeX,o.texelSizeY),S.uniform1i(P.uniforms.uTexture,o.attach(0)),S.viewport(0,0,v.width,v.height),L(v.fbo),o=v}S.blendFunc(S.ONE,S.ONE),S.enable(S.BLEND);for(var l=F.length-2;0<=l;l--){var m=F[l];S.uniform2f(P.uniforms.texelSize,o.texelSizeX,o.texelSizeY),S.uniform1i(P.uniforms.uTexture,o.attach(0)),S.viewport(0,0,m.width,m.height),L(m.fbo),o=m}S.disable(S.BLEND),O.bind(),S.uniform2f(O.uniforms.texelSize,o.texelSizeX,o.texelSizeY),S.uniform1i(O.uniforms.uTexture,o.attach(0)),S.uniform1f(O.uniforms.intensity,config.BLOOM_INTENSITY),S.viewport(0,0,t.width,t.height),L(t.fbo)}}if(config.SUNRAYS){u=w.read,f=w.write,a=U,S.disable(S.BLEND),Te.bind(),S.uniform1i(Te.uniforms.uTexture,u.attach(0)),S.viewport(0,0,f.width,f.height),L(f.fbo),xe.bind(),S.uniform1f(xe.uniforms.weight,config.SUNRAYS_WEIGHT),S.uniform1i(xe.uniforms.uTexture,f.attach(0)),S.viewport(0,0,a.width,a.height),L(a.fbo);var s=U,h=W,g=1;B.bind();for(var d=0;d<g;d++)S.uniform2f(B.uniforms.texelSize,s.texelSizeX,0),S.uniform1i(B.uniforms.uTexture,s.attach(0)),L(h.fbo),S.uniform2f(B.uniforms.texelSize,0,s.texelSizeY),S.uniform1i(B.uniforms.uTexture,h.attach(0)),L(s.fbo)}null!=n&&config.TRANSPARENT?S.disable(S.BLEND):(S.blendFunc(S.ONE,S.ONE_MINUS_SRC_ALPHA),S.enable(S.BLEND));var r=null==n?S.drawingBufferWidth:n.width,t=null==n?S.drawingBufferHeight:n.height,T=(S.viewport(0,0,r,t),null==n?null:n.fbo);{var x,E;config.TRANSPARENT||(x=T,E=function(e){return{r:e.r/255,g:e.g/255,b:e.b/255}}(config.BACK_COLOR),ge.bind(),S.uniform4f(ge.uniforms.color,E.r,E.g,E.b,1),L(x))}null==n&&config.TRANSPARENT&&(E=T,de.bind(),S.uniform1f(de.uniforms.aspectRatio,p.width/p.height),L(E));x=T,n=r,T=t;C.bind(),config.SHADING&&S.uniform2f(C.uniforms.texelSize,1/n,1/T),S.uniform1i(C.uniforms.uTexture,w.read.attach(0)),config.BLOOM&&(S.uniform1i(C.uniforms.uBloom,k.attach(1)),S.uniform1i(C.uniforms.uDithering,me.attach(2)),n=function(e,n,r){return{x:n/e.width,y:r/e.height}}(me,n,T),S.uniform2f(C.uniforms.ditherScale,n.x,n.y)),config.SUNRAYS&&S.uniform1i(C.uniforms.uSunrays,U.attach(3)),L(x),requestAnimationFrame(Ae)}function _e(){var e=m(p.clientWidth),n=m(p.clientHeight);return(p.width!=e||p.height!=n)&&(p.width=e,p.height=n,1)}function be(e){for(var n=0;n<e;n++){var r=Ne();r.r*=10,r.g*=10,r.b*=10,Ue(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function Ue(e,n,r,i,t){S.viewport(0,0,A.width,A.height),v.bind(),S.uniform1i(v.uniforms.uTarget,A.read.attach(0)),S.uniform1f(v.uniforms.aspectRatio,p.width/p.height),S.uniform2f(v.uniforms.point,e,n),S.uniform3f(v.uniforms.color,r,i,0),S.uniform1f(v.uniforms.radius,function(e){var n=p.width/p.height;1<n&&(e*=n);return e}(config.SPLAT_RADIUS/100)),L(A.write.fbo),A.swap(),S.viewport(0,0,w.width,w.height),S.uniform1i(v.uniforms.uTarget,w.read.attach(0)),S.uniform3f(v.uniforms.color,t.r,t.g,t.b),L(w.write.fbo),w.swap()}function Le(e,n,r,i){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=r/p.width,e.texcoordY=1-i/p.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=Ne()}function Fe(e,n,r){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/p.width,e.texcoordY=1-r/p.height,e.deltaX=function(e){var n=p.width/p.height;n<1&&(e*=n);return e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){var n=p.width/p.height;1<n&&(e/=n);return e}(e.texcoordY-e.prevTexcoordY),e.moved=0<Math.abs(e.deltaX)||0<Math.abs(e.deltaY)}function Be(e){e.down=!1}function Ne(){var e=function(e,n,r){var i,t,o,a,u,f,c;switch(a=Math.floor(6*e),u=r*(1-n),f=r*(1-(e=6*e-a)*n),c=r*(1-(1-e)*n),a%6){case 0:i=r,t=c,o=u;break;case 1:i=f,t=r,o=u;break;case 2:i=u,t=r,o=c;break;case 3:i=u,t=f,o=r;break;case 4:i=c,t=u,o=r;break;case 5:i=r,t=u,o=f}return{r:i,g:t,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function g(e){var n=S.drawingBufferWidth/S.drawingBufferHeight,r=(n<1&&(n=1/n),Math.round(e)),e=Math.round(e*n);return S.drawingBufferWidth>S.drawingBufferHeight?{width:e,height:r}:{width:r,height:e}}function m(e){var n=window.devicePixelRatio||1;return Math.floor(e*n)}window.addEventListener("touchend",function(e){for(var r=e.changedTouches,n=0;n<r.length;n++)!function(n){var e=R.find(function(e){return e.id==r[n].identifier});if(null==e)return;Be(e)}(n)}),window.addEventListener("keydown",function(e){"KeyP"===e.code&&(config.PAUSED=!config.PAUSED)," "===e.key&&D.push(parseInt(20*Math.random())+5)}),document.addEventListener("mousedown",function(e){var n,r;switchPage&&switchPage.switched||(n=m(e.pageX),e=m(e.pageY),Le(r=null==(r=R.find(function(e){return-1==e.id}))?new o:r,-1,n,e))}),document.addEventListener("mousemove",function(e){var n;switchPage&&switchPage.switched||(n=R[0]).down&&Fe(n,m(e.pageX),m(e.pageY))}),document.addEventListener("mouseup",function(){switchPage&&switchPage.switched||Be(R[0])}),document.addEventListener("touchstart",function(e){if(!switchPage||!switchPage.switched){e.preventDefault();for(var n=e.targetTouches;n.length>=R.length;)R.push(new o);for(var r=0;r<n.length;r++){var i=m(n[r].pageX),t=m(n[r].pageY);Le(R[r+1],n[r].identifier,i,t)}}}),document.addEventListener("touchmove",function(e){if(!switchPage||!switchPage.switched){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++){var i=R[r+1];i.down&&Fe(i,m(n[r].pageX),m(n[r].pageY))}}},!1),document.addEventListener("touchend",function(e){if(!switchPage||!switchPage.switched)for(var r=e.changedTouches,n=0;n<r.length;n++)!function(n){var e=R.find(function(e){return e.id==r[n].identifier});if(null==e)return;Be(e)}(n)})},{}]},{},[1]);